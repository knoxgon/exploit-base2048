#pragma once

//#include <mysql_connection.h>
//#include <mysql_driver.h>
//#include <mysql_error.h>
////#include <cppconn\resultset.h>
//
//class DBConnection {
//private:
//	sql::Driver* driver;
//	sql::Connection *con;
//	sql::Statement *stmt;
//	//sql::ResultSet *res;
//	sql::PreparedStatement *prepstate;
//
//public:
//	DBConnection() {
//
//	}
//	~DBConnection() {
//		//delete res;
//		delete stmt;
//		delete con;
//	}
//	void initConn() {
//		try {
//			driver = get_driver_instance();
//			con = driver->connect("tcp://127.0.0.1:3306", "root", "toor");
//
//			con->setSchema("wallet");
//		}
//		catch (sql::SQLException& exp) {
//			std::cout << "# ERR: SQLException in " << __FILE__;
//			std::cout << "(" << __FUNCTION__ << ") on line "<< __LINE__ << std::endl;
//			std::cout << "# ERR: " << exp.what();
//			std::cout << " (MySQL error code: " << exp.getErrorCode();
//			std::cout << ", SQLState: " << exp.getSQLState() << " )" << std::endl;
//		}
//	}
//
//	void createStatement() {
//
//	}
//};