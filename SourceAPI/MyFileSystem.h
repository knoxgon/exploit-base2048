#pragma once

#include <string>
#include <Windows.h>
#include <Lmcons.h>
#include <random>
#include <vector>

typedef struct MagicC {
	int year; int month; int day;
	int hour; int minute; int second;
	int millisecond;
	MagicC():year(-1), month(-1), day(-1), hour(-1), minute(-1), second(-1), millisecond(-1), flag(false){}
	std::random_device rd;
	int genMe(int min, int max) {
		std::mt19937 rng(rd());
		std::uniform_int_distribution<int> uni(min, max);

		int random_integer = uni(rng);
		return random_integer;
	}
	bool flag;
	bool flagMe(bool status) {
		flag = status;
		return flag;
	}

	int Year() {
		if (!flag)
			year = genMe(2000, 2012);
		else
			year = genMe(2013, 2017);
		return year; 
	}
	int Month() {
		month = genMe(1, 12);
		return month;
	}
	int Day() {
		day = genMe(1, 27);
		return day;
	}
	int Hour() {
		hour = genMe(0, 23);
		return hour;
	}
	int Minute() {
		minute = genMe(0, 59);
		return minute;
	}
	int Second() {
		second = genMe(1, 59);
		return second;
	}
	int Millisecond() {
		millisecond = genMe(0, 99);
		return millisecond;
	}
}Magics;

class MyFileSystem {
private:
	std::vector<LPCSTR> extensionList;
	std::vector<std::string> fileList;
	std::string extension;

public:

public:
	MyFileSystem();
	void SeekFiles(std::string folderName);
	std::vector<std::string> getAquiredFiles()const;
	std::vector<LPCSTR> getExtensions()const;
	void commitMagicFile(const char * file);
	void commitMagicDirectory(const char * dir);
	int makeDirectory(const char* dirName);
};